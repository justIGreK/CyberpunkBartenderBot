// Code generated by MockGen. DO NOT EDIT.
// Source: geolocalation.go

// Package mock_ipgeolocation is a generated GoMock package.
package mock_ipgeolocation

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockTimeDiffGetter is a mock of TimeDiffGetter interface.
type MockTimeDiffGetter struct {
	ctrl     *gomock.Controller
	recorder *MockTimeDiffGetterMockRecorder
}

// MockTimeDiffGetterMockRecorder is the mock recorder for MockTimeDiffGetter.
type MockTimeDiffGetterMockRecorder struct {
	mock *MockTimeDiffGetter
}

// NewMockTimeDiffGetter creates a new mock instance.
func NewMockTimeDiffGetter(ctrl *gomock.Controller) *MockTimeDiffGetter {
	mock := &MockTimeDiffGetter{ctrl: ctrl}
	mock.recorder = &MockTimeDiffGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTimeDiffGetter) EXPECT() *MockTimeDiffGetterMockRecorder {
	return m.recorder
}

// GetTimeDiff mocks base method.
func (m *MockTimeDiffGetter) GetTimeDiff(lat, lon float64) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTimeDiff", lat, lon)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTimeDiff indicates an expected call of GetTimeDiff.
func (mr *MockTimeDiffGetterMockRecorder) GetTimeDiff(lat, lon interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTimeDiff", reflect.TypeOf((*MockTimeDiffGetter)(nil).GetTimeDiff), lat, lon)
}
